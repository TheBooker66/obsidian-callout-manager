// ---------------------------------------------------------------------------------------------------------------------
// This is the configuration file for building the Obsidian plugin.
// ---------------------------------------------------------------------------------------------------------------------
import esbuild from 'esbuild';
import process from 'process';

import { external, outdir } from './build.config.mjs';
import esbuildAlias from 'esbuild-plugin-alias';
import esbuildCssInJs from './build/esbuild-plugin-cssints/esbuild-plugin-cssints.mjs';
import esbuildObsidian from './build/esbuild-plugin-obsidian/esbuild-plugin-obsidian.mjs';
import ts from 'typescript';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = process.argv[2] === 'production';
const tsconfig = ts.getParsedCommandLineOfConfigFile("tsconfig.json", undefined, ts.createCompilerHost({}));
const aliases = Object.keys(tsconfig.options.paths).map(([module, paths]) => paths[0]);

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ['src/main.ts'],
	bundle: true,
	plugins: [
		esbuildAlias(aliases),
		esbuildObsidian({ outdir: '.' }),
		esbuildCssInJs({ compressed: prod })
	],
	loader: {
		'.md': 'text',
	},
	format: 'cjs',
	target: 'es2020',
	logLevel: 'info',
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	external,
	outdir,
});

if (prod) {
	await context.rebuild();
	process.exit(0);
} else {
	await context.watch();
}
